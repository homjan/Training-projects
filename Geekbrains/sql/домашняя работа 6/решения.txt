1. ¬ базе данных shop и sample присутвуют одни и те же таблицы учебной базы данных. ѕереместите запись id = 1 из таблицы shop.users в таблицу sample.users. »спользуйте транзакции.

start transaction;

insert into sample.users

select * from shop.users where id = 1;

delete from shop.users where id = 1 limit 1;

commit;


2. —оздайте представление, которое выводит название (name) товарной позиции из таблицы products и соответствующее название (name) каталога из таблицы catalogs.

create view catalogs_and_products as

select products.name as products_name, catalogs.name as catalogs_name

from products join catalogs

where products.catalog_id=catalogs.id;


3. (по желанию) ѕусть имеетс€ таблица с календарным полем created_at. ¬ ней размещены разр€женые календарные записи за август 2018 года '2018-08-01', '2016-08-04', '2018-08-16' и 2018-08-17. —оставьте запрос, который выводит полный список дат за август, выставл€€ в соседнем поле значение 1, если дата присутствует в исходном таблице и 0, если она отсутствует.

‘ункци€ собирает таблицу со всеми существующими дн€ми, из которых потом выбираем нужные.

with func as(
SELECT v.selected_date FROM 
(SELECT adddate('1970-01-01',t4*10000 + t3*1000 + t2*100 + t1*10 + t0) selected_date  FROM
 (SELECT 0 t0 UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) t0,
 (SELECT 0 t1 UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) t1,
 (SELECT 0 t2 UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) t2,
 (SELECT 0 t3 UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) t3,
 (SELECT 0 t4 UNION SELECT 1 UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9) t4) v

WHERE selected_date BETWEEN '2018-08-01' AND '2018-08-31' )



select posts.id, posts.created_at, func.selected_date,

case 
when posts.created_at = func.selected_date 
then 1

else 0

end co

from func left join posts

on posts.created_at = func.selected_date;



4. (по желанию) ѕусть имеетс€ люба€ таблица с календарным полем created_at. —оздайте запрос, который удал€ет устаревшие записи из таблицы, оставл€€ только 5 самых свежих записей.

START TRANSACTION;

CREATE TEMPORARY TABLE limited (
  id INT);

INSERT INTO limited

SELECT id

FROM posts

ORDER BY created_at DESC

LIMIT 5;


DELETE FROM posts

WHERE id NOT IN 
(SELECT id FROM limited);

DROP TEMPORARY TABLE limited;

COMMIT;

