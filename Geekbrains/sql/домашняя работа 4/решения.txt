1. ѕодсчитайте средний возраст пользователей в таблице users.

SELECT

  avg(
    
(YEAR(CURRENT_DATE) - YEAR(birthday_at)) -
 (DATE_FORMAT(CURRENT_DATE, '%m%d') < DATE_FORMAT(birthday_at, '%m%d'))
/*вычитаем 1, если дн€ рождени€ в этом году ещЄ не было */
  )
 AS avg_age

from users;


2. ѕодсчитайте количество дней рождени€, которые приход€тс€ на каждый из дней недели. —ледует учесть, что необходимы дни недели текущего года, а не года рождени€.


SELECT COUNT(DAYOFWEEK /*считаем день недели*/

(TIMESTAMPADD /*ƒобавл€ем разницу в годах между сегодн€шной датой и датой рождени€*/

(YEAR, TIMESTAMPDIFF(YEAR, birthday_at, CURDATE()) /*—читаем разницу в годах между сегодн€шной датой и датой рождени€*/
, birthday_at))) as number

  from users

  group by DAYOFWEEK(TIMESTAMPADD(YEAR, TIMESTAMPDIFF(YEAR, birthday_at, CURDATE()), birthday_at))
 ;

(то же самое без комментариев)
SELECT COUNT(DAYOFWEEK(TIMESTAMPADD(YEAR, TIMESTAMPDIFF(YEAR, birthday_at, CURDATE()), birthday_at))) as number
  
from users
 
group by DAYOFWEEK(TIMESTAMPADD(YEAR, TIMESTAMPDIFF(YEAR, birthday_at, CURDATE()), birthday_at))
 ;

3. (по желанию) ѕодсчитайте произведение чисел в столбце таблицы.

≈сли в столбце нет отрицательных значений и 0, то
select exp(SUM(log(abs(id))))
from users;

≈сли есть, необходима предварительна€ проверка

WITH T AS(SELECT id FROM users), 

P AS(SELECT SUM(CASE WHEN id <0 THEN 1 ELSE 0 END) as nega,
 
SUM(CASE WHEN id >0 THEN 1 ELSE 0 END) as pos,

COUNT(id) as total

FROM users)

SELECT CASE WHEN total <> pos+nega /* провер€ем наличие нулей */ THEN 0 ELSE 

(CASE WHEN nega%2=1 THEN -1 ELSE +1 END) *exp(SUM(log(abs(id))))

END

product  FROM T,P WHERE id <> 0 GROUP BY nega, pos, total;
